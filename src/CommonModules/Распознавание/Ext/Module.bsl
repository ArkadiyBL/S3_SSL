
// + #s3 Иванов А.Б. 12.01.2021
// Возвращает путь к временному файлу, для последующей передачи его
// программе распознавания.
//
// Параметры:
//  ВерсияФайла - СпавочникСсылка.ВерсииФайлов
//  ТипХранения - ПеречислениеСсылка.ТипыХраненияФайлов
//  Расширение - Строка
//  Том - СправочникСсылка.ТомаХраненияФайлов
//  ПутьКФайлу - Строка
//
// Возвращаемое значение:
//  Строка
//
&ИзменениеИКонтроль("ВременныйФайлДляРаспознавания")
Функция s3_ВременныйФайлДляРаспознавания(ВерсияФайла, ТипХранения, Расширение, Том, ПутьКФайлу)
	
	ИмяФайлаСПутем = КаталогВременныхФайлов()
		+ ИмяВременногоФайла(ВерсияФайла.УникальныйИдентификатор(), Расширение);
	
	Если ТипХранения = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
		
		ХранилищеФайла = РаботаСФайламиВызовСервера.ПолучитьХранилищеФайлаИзИнформационнойБазы(ВерсияФайла);
		ДвоичныеДанныеФайла = ХранилищеФайла.Получить();
		
		// Сохраним файл из БД на диск
		ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);
		
	Иначе // тут файл на диске
		
		Если НЕ Том.Пустая() Тогда
			ИмяФайлаСПутемВТоме = ФайловыеФункции.ПолныйПутьТома(Том) + ПутьКФайлу; 
			#Удаление
			КопироватьФайл(ИмяФайлаСПутемВТоме, ИмяФайлаСПутем);
			#КонецУдаления
			#Вставка 
			// + #s3 Иванов А.Б. 12.01.2021
			Если s3_API.ЭтоТипХранилища_ОбъектноеS3(Том) Тогда
				ДвоичныеДанныеФайла = s3_API.ПолучитьДвоичныеДанныеФайлаИзS3(Том, ИмяФайлаСПутемВТоме);
				
				ДвоичныеДанныеФайла.Записать(ИмяФайлаСПутем);	
			Иначе
				КопироватьФайл(ИмяФайлаСПутемВТоме, ИмяФайлаСПутем);
			КонецЕсли;
			// - #s3 Иванов А.Б. 12.01.2021				
			#КонецВставки	
			Файл = Новый Файл(ИмяФайлаСПутем);
			Файл.УстановитьТолькоЧтение(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ИмяФайлаСПутем;
	
КонецФункции // - #s3 Иванов А.Б. 12.01.2021
